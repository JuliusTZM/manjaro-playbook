---
- name: Set password for the domain administrator
  pause:
    prompt: "Enter your password for the domain aministrator"
    echo: no
  register: domain_admin_password

- name: Creating smb.conf with respected resources
  template:
    src: smb_conf.j2
    dest: /etc/samba/smb.conf
  become: yes
  tags:
    - samba

- name: Creating krb5.conf with respected resources
  template:
    src: krb5_conf.j2
    dest: /etc/krb5.conf
  become: yes
  tags:
    - samba

- name: Creating pam_winbind.conf with respected resources
  template:
    src: pam_winbind_conf.j2
    dest: /etc/security/pam_winbind.conf
  become: yes
  tags:
    - samba

- name: Creating sssd.conf with respected resources
  template:
    src: sssd_conf.j2
    dest: /etc/sssd/sssd.conf
    owner: root
    group: root
    mode: '0400'
  become: yes
  tags:
    - samba

- set_fact:
    content: "{{ lookup('file', '/etc/nsswitch.conf') }}"
- name: Add SSSD to nsswitch.conf
  replace:
    path: /etc/nsswitch.conf
    regexp: '(\s+){{ item }}: files(\s+.*)?$'
    replace: '\1{{ item }}: files sss\2'
    backup: yes
  with_items:
    - passwd
    - group
    - shadow
    - hosts
  become: yes
  when: not content|regex_search('.*'+'sss'+'.*'|string)
  tags:
    - samba

- name: Add Sudoers with SSSD to nsswitch.conf
  lineinfile:
    path: /etc/nsswitch.conf
    insertafter: '^shadow:'
    line: 'sudoers: files sss'
    state: present
    backup: yes
  become: yes
  when: not content|regex_search('.*'+'sss'+'.*'|string)
  tags:
    - samba

- name: Join system to AD
  expect:
    command: /bin/bash -c "/usr/bin/net ads join -U Administrator"
    responses:
      (.*)Enter Administrator(.)s password: "{{ domain_admin_password.user_input }}"
  become: yes
  tags:
    - samba

- name: Creating a Kerberos ticket
  expect:
    command: /bin/bash -c "kinit administrator@{{ domain|upper }}"
    responses:
      (.*)Password for administrator@{{ domain|upper }}: "{{ domain_admin_password.user_input }}"
  become: yes
  tags:
    - samba

- name: Create keytab file for the AD
  expect:
    command: /bin/bash -c "net ads keytab create -U Administrator"
    responses:
      (.*)Enter Administrator(.)s password: "{{ domain_admin_password.user_input }}"
  become: yes
  tags:
    - samba

- name: Copy PAM modules to /etc/pam.d
  copy:
    src: '{{ item }}'
    dest: /etc/pam.d/{{ item }}
    owner: root
    group: root
    mode: 0644
    backup: yes
  with_items:
    - su
    - su-l
    - system-auth
    - system-login
  become: yes
  tags:
    - samba

- name: Make sure the Samba & SSSD services are running
  systemd: state=started name={{ item }} enabled=yes
  with_items:
     - smb
     - nmb
     - winbind
     - sssd
  become: yes
  tags:
    - samba
